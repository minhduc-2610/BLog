<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spring Boot on My blog</title>
    <link>http://localhost:1313/tags/spring-boot/</link>
    <description>Recent content in Spring Boot on My blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 30 Dec 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/spring-boot/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Làm việc với Cơ sở dữ liệu trong Spring Boot</title>
      <link>http://localhost:1313/post/co-so-du-lieu/</link>
      <pubDate>Mon, 30 Dec 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/co-so-du-lieu/</guid>
      
        <description><h3 id="giới-thiệu-về-làm-việc-với-cơ-sở-dữ-liệu-trong-spring-boot">Giới thiệu về làm việc với cơ sở dữ liệu trong Spring Boot</h3>
<p>Spring Boot là một framework mạnh mẽ giúp xây dựng các ứng dụng Java một cách nhanh chóng và dễ dàng. Trong bài viết này, chúng ta sẽ tìm hiểu cách làm việc với cơ sở dữ liệu trong Spring Boot, từ việc kết nối cơ sở dữ liệu đến việc thực hiện các thao tác CRUD (Tạo, Đọc, Cập nhật, Xóa) với cơ sở dữ liệu.</p></description>
      
    </item>
    
    <item>
      <title>Sử dụng Spring Security trong ứng dụng Spring Boot</title>
      <link>http://localhost:1313/post/spring-security/</link>
      <pubDate>Mon, 30 Dec 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/spring-security/</guid>
      
        <description><h3 id="giới-thiệu-về-spring-security">Giới thiệu về Spring Security</h3>
<p>Spring Security là một framework bảo mật mạnh mẽ cho các ứng dụng Java, đặc biệt là các ứng dụng Spring Boot. Nó cung cấp các tính năng bảo mật quan trọng như xác thực (authentication), phân quyền (authorization), và bảo vệ khỏi các mối đe dọa như CSRF, XSS.</p></description>
      
    </item>
    
    <item>
      <title>Tối ưu hóa ứng dụng Spring Boot với Caching</title>
      <link>http://localhost:1313/post/caching/</link>
      <pubDate>Mon, 30 Dec 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/caching/</guid>
      
        <description><h3 id="giới-thiệu-về-caching">Giới thiệu về Caching</h3>
<p>Caching là một kỹ thuật tối ưu hóa hiệu suất giúp giảm thiểu thời gian xử lý bằng cách lưu trữ kết quả của các thao tác tính toán hoặc truy vấn vào bộ nhớ tạm thời, giúp tiết kiệm tài nguyên và thời gian cho các lần truy vấn tiếp theo. Spring Boot cung cấp một giải pháp caching tích hợp sẵn giúp dễ dàng cải thiện hiệu suất ứng dụng.</p></description>
      
    </item>
    
    <item>
      <title>Xây dựng API RESTful với Spring Boot</title>
      <link>http://localhost:1313/post/api/</link>
      <pubDate>Mon, 30 Dec 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/api/</guid>
      
        <description><h3 id="giới-thiệu-về-api-restful">Giới thiệu về API RESTful</h3>
<p>API RESTful là một phong cách kiến trúc cho phép các hệ thống giao tiếp với nhau thông qua HTTP, sử dụng các phương thức như GET, POST, PUT và DELETE. RESTful API được thiết kế đơn giản và dễ dàng sử dụng, giúp kết nối giữa các hệ thống và ứng dụng web, di động.</p></description>
      
    </item>
    
    <item>
      <title>Xây dựng và triển khai ứng dụng Microservices với Spring Boot</title>
      <link>http://localhost:1313/post/microservices/</link>
      <pubDate>Mon, 30 Dec 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/microservices/</guid>
      
        <description><h3 id="giới-thiệu-về-microservices">Giới thiệu về Microservices</h3>
<p>Microservices là một kiến trúc phần mềm trong đó ứng dụng được chia thành các dịch vụ nhỏ, độc lập, mỗi dịch vụ thực hiện một chức năng cụ thể. Các dịch vụ này giao tiếp với nhau qua API và có thể được triển khai, phát triển, và bảo trì một cách độc lập.</p></description>
      
    </item>
    
  </channel>
</rss>